"use strict";exports.id=622,exports.ids=[622],exports.modules={2043:(e,t,a)=>{a.r(t),a.d(t,{authOptions:()=>n,default:()=>l});var r=a(5542),s=a.n(r),i=a(6258);let n={providers:[{id:"telegram",name:"Telegram",type:"custom",async authorize(e){try{var t;let a=JSON.parse(e.telegramData);t=0,!1;let r=new i.z,s=await r.authenticateUser(a);return{id:s.$id,name:`${s.firstName} ${s.lastName||""}`.trim(),email:s.email,image:a.photo_url||null,telegramId:s.telegramId,username:s.username}}catch(e){return console.error("Telegram auth error:",e),null}}}],callbacks:{jwt:async({token:e,user:t})=>(t&&(e.id=t.id,e.telegramId=t.telegramId,e.username=t.username),e),session:async({session:e,token:t})=>(t&&(e.user.id=t.id,e.user.telegramId=t.telegramId,e.user.username=t.username),e)},pages:{signIn:"/auth/signin",error:"/auth/error"},session:{strategy:"jwt"},secret:process.env.NEXTAUTH_SECRET},l=s()(n)},3480:(e,t,a)=>{e.exports=a(5600)},6258:(e,t,a)=>{a.d(t,{z:()=>l});var r=a(6209),s=a.n(r),i=a(5511),n=a.n(i);class l{constructor(){this.bot=new(s())(process.env.TELEGRAM_BOT_TOKEN,{polling:!1}),this.channels={storage:process.env.STORAGE_CHANNEL_ID,database:process.env.DATABASE_CHANNEL_ID,users:process.env.USERS_CHANNEL_ID,folders:process.env.FOLDERS_CHANNEL_ID,shares:process.env.SHARES_CHANNEL_ID}}async uploadFile(e,t,a=null){try{let r=Buffer.from(await e.arrayBuffer()),s=await this.bot.sendDocument(this.channels.storage,r,{},{filename:e.name,contentType:e.type}),i={$id:this.generateId(),type:"file",fileName:e.name,fileSize:e.size,mimeType:e.type,folderId:a||"root",userId:t,uploadDate:new Date().toISOString(),telegramFileId:s.document.file_id,telegramMessageId:s.message_id,downloadUrl:await this.getFileDownloadUrl(s.document.file_id),bucketFileId:s.document.file_id};return await this.saveMetadata(i),i}catch(e){throw Error(`File upload failed: ${e.message}`)}}async downloadFile(e){try{let t=await this.getFileMetadata(e);if(!t)throw Error("File not found");return{url:await this.bot.getFileLink(t.telegramFileId),metadata:t}}catch(e){throw Error(`File download failed: ${e.message}`)}}async deleteFile(e,t){try{let a=await this.getFileMetadata(e);if(!a||a.userId!==t)throw Error("File not found or access denied");return await this.bot.deleteMessage(this.channels.storage,a.telegramMessageId),await this.deleteMetadata(e),{success:!0}}catch(e){throw Error(`File delete failed: ${e.message}`)}}async renameFile(e,t,a){try{let r=await this.getFileMetadata(e);if(!r||r.userId!==a)throw Error("File not found or access denied");return r.fileName=t,r.updatedAt=new Date().toISOString(),await this.updateMetadata(e,r),r}catch(e){throw Error(`File rename failed: ${e.message}`)}}async createFolder(e,t="root",a){try{let r={$id:this.generateId(),type:"folder",name:e,parentId:t,userId:a,createdAt:new Date().toISOString(),updatedAt:new Date().toISOString()};return await this.saveFolderMetadata(r),r}catch(e){throw Error(`Folder creation failed: ${e.message}`)}}async getFolderContents(e,t){try{let a=await this.getFilesByFolder(e,t),r=await this.getFoldersByParent(e,t);return{files:a,folders:r}}catch(e){throw Error(`Get folder contents failed: ${e.message}`)}}async deleteFolder(e,t){try{let a=await this.getFolderMetadata(e);if(!a||a.userId!==t)throw Error("Folder not found or access denied");for(let a of(await this.getFilesByFolder(e,t)))await this.deleteFile(a.$id,t);return await this.deleteFolderMetadata(e),{success:!0}}catch(e){throw Error(`Folder delete failed: ${e.message}`)}}async authenticateUser(e){try{let t=e.id.toString(),a={$id:t,telegramId:e.id,username:e.username,firstName:e.first_name,lastName:e.last_name,email:e.email||`${e.username}@telegram.user`,lastLogin:new Date().toISOString(),accountId:t};return await this.saveUserMetadata(a),a}catch(e){throw Error(`Authentication failed: ${e.message}`)}}async getCurrentUser(e){try{return await this.getUserMetadata(e)}catch(e){throw Error(`Get user failed: ${e.message}`)}}async searchFiles(e,t){try{return(await this.getAllUserFiles(t)).filter(t=>t.fileName.toLowerCase().includes(e.toLowerCase()))}catch(e){throw Error(`Search failed: ${e.message}`)}}async shareFile(e,t,a){try{let r=this.generateId(),s={$id:r,fileId:e,ownerId:a,permissions:t,publicUrl:`${process.env.NEXTAUTH_URL}/api/public/${r}`,createdAt:new Date().toISOString()};return await this.saveShareMetadata(s),s}catch(e){throw Error(`Share failed: ${e.message}`)}}async getPublicFile(e){try{let t=await this.getShareMetadata(e);if(!t)throw Error("Share not found");return{file:await this.getFileMetadata(t.fileId),share:t}}catch(e){throw Error(`Get public file failed: ${e.message}`)}}async saveMetadata(e){let t=`FILE_META:${JSON.stringify(e)}`;return await this.bot.sendMessage(this.channels.database,t)}async saveFolderMetadata(e){let t=`FOLDER_META:${JSON.stringify(e)}`;return await this.bot.sendMessage(this.channels.folders,t)}async saveUserMetadata(e){let t=`USER_META:${JSON.stringify(e)}`;return await this.bot.sendMessage(this.channels.users,t)}async saveShareMetadata(e){let t=`SHARE_META:${JSON.stringify(e)}`;return await this.bot.sendMessage(this.channels.shares,t)}async getFileMetadata(e){try{for(let t of(await this.getChannelMessages(this.channels.database)))if(t.text?.startsWith("FILE_META:")){let a=JSON.parse(t.text.replace("FILE_META:",""));if(a.$id===e)return a}return null}catch(e){return null}}async getFolderMetadata(e){try{for(let t of(await this.getChannelMessages(this.channels.folders)))if(t.text?.startsWith("FOLDER_META:")){let a=JSON.parse(t.text.replace("FOLDER_META:",""));if(a.$id===e)return a}return null}catch(e){return null}}async getUserMetadata(e){try{for(let t of(await this.getChannelMessages(this.channels.users)))if(t.text?.startsWith("USER_META:")){let a=JSON.parse(t.text.replace("USER_META:",""));if(a.$id===e)return a}return null}catch(e){return null}}async getShareMetadata(e){try{for(let t of(await this.getChannelMessages(this.channels.shares)))if(t.text?.startsWith("SHARE_META:")){let a=JSON.parse(t.text.replace("SHARE_META:",""));if(a.$id===e)return a}return null}catch(e){return null}}async getAllUserFiles(e){try{let t=await this.getChannelMessages(this.channels.database),a=[];for(let r of t)if(r.text?.startsWith("FILE_META:")){let t=JSON.parse(r.text.replace("FILE_META:",""));t.userId===e&&a.push(t)}return a.sort((e,t)=>new Date(t.uploadDate)-new Date(e.uploadDate))}catch(e){return[]}}async getFilesByFolder(e,t){try{return(await this.getAllUserFiles(t)).filter(t=>t.folderId===e)}catch(e){return[]}}async getFoldersByParent(e,t){try{let a=await this.getChannelMessages(this.channels.folders),r=[];for(let s of a)if(s.text?.startsWith("FOLDER_META:")){let a=JSON.parse(s.text.replace("FOLDER_META:",""));a.parentId===e&&a.userId===t&&r.push(a)}return r.sort((e,t)=>new Date(t.createdAt)-new Date(e.createdAt))}catch(e){return[]}}async getChannelMessages(e,t=100){try{return[]}catch(e){return[]}}async getFileDownloadUrl(e){try{return await this.bot.getFileLink(e)}catch(e){return null}}async updateMetadata(e,t){await this.deleteMetadata(e),await this.saveMetadata(t)}async deleteMetadata(e){}async deleteFolderMetadata(e){}generateId(){return n().randomBytes(16).toString("hex")}get databases(){return{listDocuments:async(e,t,a=[])=>{if("files"===t){let e=a.find(e=>e.includes("userId"))?.split("=")[1],t=await this.getAllUserFiles(e);return{documents:t,total:t.length}}return{documents:[],total:0}},createDocument:async(e,t,a,r)=>"files"===t?await this.saveMetadata({$id:a,...r}):r,deleteDocument:async(e,t,a)=>"files"===t?await this.deleteMetadata(a):{success:!0}}}get storage(){return{createFile:async(e,t,a)=>await this.uploadFile(a,t),deleteFile:async(e,t)=>await this.deleteFile(t),getFileDownload:async(e,t)=>(await this.downloadFile(t)).url,getFileView:async(e,t)=>(await this.downloadFile(t)).url}}get account(){return{get:async()=>this.currentUser||null,createOAuth2Session:async(e,t,a)=>({success:!0})}}}},6435:(e,t)=>{Object.defineProperty(t,"M",{enumerable:!0,get:function(){return function e(t,a){return a in t?t[a]:"then"in t&&"function"==typeof t.then?t.then(t=>e(t,a)):"function"==typeof t&&"default"===a?t:void 0}}})},8667:(e,t)=>{Object.defineProperty(t,"A",{enumerable:!0,get:function(){return a}});var a=function(e){return e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE",e.IMAGE="IMAGE",e}({})}};